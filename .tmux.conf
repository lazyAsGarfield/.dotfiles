set-window-option -g xterm-keys on

if-shell '[ $(echo "$(tmux -V | cut -d" " -f2) <= 2.1" | bc) -eq 1 ]' "\
  set -g mouse-utf8 on"

if-shell '[ $(echo "$(tmux -V | cut -d" " -f2) <= 2.0" | bc) -eq 1 ]' "\
  set -g mouse-resize-pane on; \
  set -g mouse-select-pane on; \
  set -g mouse-select-window on; \
  set -g mode-mouse on"

if-shell '[ $(echo "$(tmux -V | cut -d" " -f2) > 2.0" | bc) -eq 1 ]' "\
  set -g mouse on; \
  bind -T root WheelUpPane   if-shell -F -t = \"#{alternate_on}\" \"send-keys -M\" \"select-pane -t =; copy-mode -e; send-keys -M\"; \
  bind -T root WheelDownPane if-shell -F -t = \"#{alternate_on}\" \"send-keys -M\" \"select-pane -t =; send-keys -M\"; \
  bind -T root C-WheelUpPane   if-shell -F -t = \"#{alternate_on}\" \"send-keys -M\" \"select-pane -t =; copy-mode -e; send-keys -M\"; \
  bind -T root C-WheelDownPane if-shell -F -t = \"#{alternate_on}\" \"send-keys -M\" \"select-pane -t =; send-keys -M\" "

if-shell "command -v xsel >/dev/null 2>&1" "\
  bind C-y run-shell \"tmux save-buffer - | xsel -i -b\" \\\; display \"Copied buffer to clipboard\" "

if-shell "command -v xclip >/dev/null 2>&1" "\
  bind C-y run-shell \"tmux save-buffer - | xclip -i -sel clip > /dev/null\" \\\; display \"Copied buffer to clipboard\" "

if-shell '[ $(echo "$(tmux -V | cut -d" " -f2) > 2.0" | bc) -eq 1 -a $(echo "$(tmux -V | cut -d" " -f2) < 2.4" | bc) -eq 1 ]' "\
  bind -t vi-copy      C-WheelUpPane halfpage-up; \
  bind -t vi-copy    C-WheelDownPane halfpage-down; \
  bind -t emacs-copy   C-WheelUpPane halfpage-up; \
  bind -t emacs-copy C-WheelDownPane halfpage-down "

if-shell '[ $(echo "$(tmux -V | cut -d" " -f2) >= 2.4" | bc) -eq 1 ]' "\
  bind -T copy-mode-vi      C-WheelUpPane send-keys -X halfpage-up; \
  bind -T copy-mode-vi      C-WheelDownPane send-keys -X halfpage-down "

unbind C-b
set -g prefix C-s

if-shell '[ $(echo "$(tmux -V | cut -d" " -f2) < 1.9" | bc) -eq 1 ]' "\
  bind c new-window; \
  bind C-c new-window; \
  bind C-v split-window -h; \
  bind C-x split-window"

if-shell '[ $(echo "$(tmux -V | cut -d" " -f2) >= 1.9" | bc) -eq 1 ]' "\
  bind c new-window -c \"#{pane_current_path}\"; \
  bind C-c new-window -c \"#{pane_current_path}\"; \
  bind C-v split-window -h -c \"#{pane_current_path}\"; \
  bind C-x split-window -c \"#{pane_current_path}\" "

set -g renumber-windows on

# bind      h run-shell 'tmux_lpane'
# bind      l run-shell 'tmux_rpane'
bind      h select-pane -L
bind      l select-pane -R
bind      j select-pane -D
bind      k select-pane -U

bind -r C-h resize-pane -L
bind -r C-j resize-pane -D
bind -r C-k resize-pane -U
bind -r C-l resize-pane -R

bind -r M-h resize-pane -L 10
bind -r M-j resize-pane -D 10
bind -r M-k resize-pane -U 10
bind -r M-l resize-pane -R 10

bind -n      S-Up select-pane -U
bind -n    S-Down select-pane -D
bind -n    S-Left select-pane -L
bind -n   S-Right select-pane -R

bind    C-r refresh-client

bind -r " " next-layout

bind -r   p previous-window
bind -r   n next-window

bind -r   P swap-window -t :-1
bind -r   N swap-window -t :+1

bind      S command-prompt -p "(rename-session) " "rename-session '%%'"
bind    '$' command-prompt -p "(rename-session) " "rename-session '%%'"
bind      W command-prompt -p "(rename-window) " "rename-window '%%'"
bind      , command-prompt -p "(rename-window) " "rename-window '%%'"

bind    M-w command-prompt -p "(select-window) " "select-window -t ':%%'"
bind    "'" command-prompt -p "(select-window) " "select-window -t ':%%'"
bind    M-s command-prompt -p "(select-session) " "select-session -t ':%%'"

setw -g mode-keys vi

set -g default-terminal "screen-256color"

if-shell '[ \( -f $HOME/.terminfo/74/tmux-256color -o -f $HOME/.terminfo/t/tmux-256color \) -a $(echo "$(tmux -V | cut -d" " -f2) > 2.0" | bc) -eq 1 ]' "\
    set -g default-terminal \"tmux-256color\" "

set -s escape-time 0
set -g repeat-time 350

# appearance

set -g display-panes-active-colour brightred
set -g display-panes-colour magenta
set -g display-panes-time 750

set -g status-position bottom
set -g status-justify left

# reddish
# _ST=colour124
# _ND=colour88

# greenish
# _ST=colour28
# _ND=colour22

# magenta
_ST=colour68
_ND=colour61

_FG=colour253
_FG_INACTIVE=colour250
_BG=colour236
_ST_INACTIVE=colour236
_ND_INACTIVE=$_BG

if-shell '[ $(echo "$(tmux -V | cut -d" " -f2) >= 1.9" | bc) -eq 1 ]' "\
  set -g pane-active-border-style fg=yellow,bold,reverse; \
  set -g pane-border-style fg=yellow,bold; \
  set -g status-style fg=${_FG},bg=${_BG}; \
  set -g message-style fg=colour255,bg=colour24; \
  set-window-option -g window-status-style fg=white,bg=black; \
  set-window-option -g window-status-current-style fg=black,bg=brightwhite; \
  set-window-option -g mode-style fg=brightwhite,bg=colour31 "

if-shell '[ $(echo "$(tmux -V | cut -d" " -f2) < 1.9" | bc) -eq 1 ]' "\
  set -g pane-active-border-fg magenta; \
  set -g pane-active-border-bg magenta; \
  set -g pane-border-fg magenta; \
  set -g status-fg white; \
  set -g status-bg black; \
  set -g message-fg colour255; \
  set -g message-bg colour24; \
  set-window-option -g window-status-fg white; \
  set-window-option -g window-status-bg black; \
  set-window-option -g window-status-current-fg black; \
  set-window-option -g window-status-current-bg brightwhite; \
  set-window-option -g mode-fg brightwhite; \
  set-window-option -g mode-bg colour31 "

set -g status-left-length 25
set -g status-left " #[fg=${_FG},bg=${_ST},bold]  #S  #[fg=colour254,bg=${_BG},nobold]  "

current_command_is_ssh='echo "#{pane_current_command}" | grep -iqE "((^|\/)ssh$)"'

arch='#(uname -m)'
# host='#(echo "#{pane_current_command}" | grep -iqE "((^|\/)ssh$)" && echo $(cat ~/.panes/#D) "<-" #(whoami)@#(hostname) || echo #(whoami)@#(hostname))'
host='#(echo #(whoami)@#(hostname))'
battery='#(grep -q BAT <<< "$(upower -e)" && echo -n "#[fg=${_FG},bg=${_ST},bold]" $(upower -i "$(upower -e | grep BAT)" | grep percentage | tr -s " " | cut -d" " -f3) "#[default] ")'

set -g status-right-length 150

set -g status-right " #[fg=${_FG},bg=${_ST},bold] $arch #[default] #[fg=${_FG},bg=${_ND},bold] $host #[default] $battery "\
"#[fg=${_FG},bg=${_ND},bold] %d.%m %A #[default] #[fg=${_FG},bg=${_ST},bold] %R #[fg=colour254,bg=${_BG},nobold] "

if-shell '[ $(echo "$(tmux -V | cut -d" " -f2) < 2.0" | bc) -eq 1 ]' "\
  set -g status-right \" #[fg=${_FG},bg=${_ST},bold]  #(uname -m)  #[default] #[fg=${_FG},bg=${_ND},bold]  #(whoami)@#(hostname)  #[default] \
#[fg=${_FG},bg=${_ND},bold]  %d.%m %A  #[default] #[fg=${_FG},bg=${_ST},bold]  %R  #[fg=colour254,bg=${_BG},nobold]  \" "

set -g window-status-format "#[fg=${_FG_INACTIVE},bg=${_ST_INACTIVE},noitalics] #I #[bg=${_ND_INACTIVE},italics] #W "
set -g window-status-current-format "#[fg=${_FG},bg=${_ST},bold] #I #[fg=${_FG},bg=${_ND},bold,noitalics] #W#F "

set -g window-status-activity-attr reverse

set -g monitor-activity on

should_pass_vim='echo "#{pane_current_command}" | grep -iqE "((^|\/)(g?(view|n?vim?x?)(diff)?)|(ssh)$)"'
should_pass_fzf='echo "#{pane_start_command}" | grep -iqE "(^|\/)fzf"'
should_pass_fzf2="[[ '#{pass_ctrl}' -eq 1 ]]"

bind -n C-h if-shell "$should_pass_vim || $should_pass_fzf || $should_pass_fzf2" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$should_pass_vim || $should_pass_fzf || $should_pass_fzf2" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$should_pass_vim || $should_pass_fzf || $should_pass_fzf2" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$should_pass_vim || $should_pass_fzf || $should_pass_fzf2" "send-keys C-l" "select-pane -R"

if-shell '[ $(echo "$(tmux -V | cut -d" " -f2) < 2.4" | bc) -eq 1 -a $(echo "$(tmux -V | cut -d" " -f2) >= 2.2" | bc) -eq 1 ]' "\
  unbind -t vi-copy MouseDragEnd1Pane "

if-shell '[ $(echo "$(tmux -V | cut -d" " -f2) >= 2.4" | bc) -eq 1 ]' "\
  unbind -T copy-mode MouseDragEnd1Pane; \
  unbind -T copy-mode-vi MouseDragEnd1Pane "

if-shell '[ $(echo "$(tmux -V | cut -d" " -f2) < 2.4" | bc) -eq 1 ]' "\
  bind -t vi-copy v begin-selection; \
  bind -t vi-copy C-v rectangle-toggle; \
  bind -t vi-copy y copy-selection; \
  bind -t vi-copy u halfpage-up; \
  bind -t vi-copy d halfpage-down "

if-shell '[ $(echo "$(tmux -V | cut -d" " -f2) >= 2.4" | bc) -eq 1 ]' "\
  bind -T copy-mode-vi v send-keys -X begin-selection; \
  bind -T copy-mode-vi C-v send-keys -X rectangle-toggle; \
  bind -T copy-mode-vi y send-keys -X copy-selection; \
  bind -T copy-mode-vi u send-keys -X halfpage-up; \
  bind -T copy-mode-vi d send-keys -X halfpage-down "

if-shell '[ $(echo "$(tmux -V | cut -d" " -f2) >= 2.3" | bc) -eq 1 ]' "\
  set -g pane-border-status bottom; \
  set -g pane-border-format \" #{pane_current_command} \" "

set -g allow-rename off

setw -g aggressive-resize on

bind C-s send-prefix
bind C-a last-window

set -g history-limit 10000

set-option -ga terminal-overrides ",xterm-256color:Tc"

if-shell "[[ $(uname -s) =~ Darwin ]]" "\
    set-option -g default-command \"reattach-to-user-namespace -l zsh\" "

# key binds similar to byobu

if-shell '[ $(echo "$(tmux -V | cut -d" " -f2) < 1.9" | bc) -eq 1 ]' "\
  bind -n        F2 new-window; \
  bind -n      C-F2 split-window -h; \
  bind -n      S-F2 split-window -v; \
  bind -n    C-S-F2 new-session"

if-shell '[ $(echo "$(tmux -V | cut -d" " -f2) >= 1.9" | bc) -eq 1 ]' "\
  bind -n        F2 new-window -c \"#{pane_current_path}\"; \
  bind -n      C-F2 split-window -h -c \"#{pane_current_path}\"; \
  bind -n      S-F2 split-window -v -c \"#{pane_current_path}\"; \
  bind -n    C-S-F2 new-session"

bind -n        F3  previous-window
bind -n        F4  next-window
bind -n      C-F3  swap-pane -s :. -t :.- \; select-pane -t :.-
bind -n      C-F4  swap-pane -s :. -t :.+ \; select-pane -t :.+
bind -n    C-S-F3  swap-window -t :-1
bind -n    C-S-F4  swap-window -t :+1

bind -n    M-Left  previous-window
bind -n   M-Right  next-window
bind -n      M-Up  switch-client -p
bind -n    M-Down  switch-client -n
bind -n      S-Up  select-pane -U
bind -n    S-Down  select-pane -D
bind -n    S-Left  select-pane -L
bind -n   S-Right  select-pane -R

bind -n    M-S-Up  resize-pane -U
bind -n  M-S-Down  resize-pane -D
bind -n  M-S-Left  resize-pane -L
bind -n M-S-Right  resize-pane -R

bind -n        F5  source-file ~/.tmux.conf

bind -n        F6  detach-client
bind -n      C-F6  kill-pane

bind -n      M-F9  display-panes \; setw synchronize-panes

bind -n      M-F11 break-pane
bind -n      C-F11 join-pane -h -s :. -t :-1
bind -n      S-F11 resize-pane -Z

bind          M-1 select-layout even-horizontal
bind          M-2 select-layout even-vertical
bind          M-3 select-layout main-horizontal
bind          M-4 select-layout main-vertical
bind          M-5 select-layout tiled

bind            K confirm-before kill-window

if-shell 'test -r $HOME/.tmux.conf.local' 'source-file "$HOME/.tmux.local.conf"'

# vim: ft=tmux
